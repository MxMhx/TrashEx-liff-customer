import React, { useEffect, useState } from 'react';
import liff from '@line/liff';
import './App.css';
import { loginWithLineId } from './api/business/login';
import { useNavigate } from 'react-router-dom';
import LoadingSpinner from './components/LoadingSpinner';

const App = () => {
  const navigate = useNavigate();
  const [loading, setLoading] = useState(true);
  const [errorMessage, setErrorMessage] = useState('');

  useEffect(() => {
    const handleAuth = async () => {
      try {
        // ‚úÖ STEP 1: ‡πÄ‡∏Ñ‡∏¢ login ‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô ‚Üí ‡πÄ‡∏î‡πâ‡∏á‡πÄ‡∏Ç‡πâ‡∏≤ /home ‡πÄ‡∏•‡∏¢
        const storedJwt = localStorage.getItem('jwt');
        const storedLineId = localStorage.getItem('userId');

        if (storedJwt && storedLineId) {
          console.log("‚úÖ Found existing login, redirecting to /home");
          navigate('/home');
          return;
        }

        // ‚úÖ STEP 2: ‡πÄ‡∏£‡∏¥‡πà‡∏° LINE LIFF
        await liff.init({ liffId: import.meta.env.VITE_LIFF_ID });

        if (!liff.isLoggedIn()) {
          liff.login(); // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login ‡∏Ç‡∏≠‡∏á LINE
          return;
        }

        // ‚úÖ STEP 3: ‡∏î‡∏∂‡∏á‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå LINE
        const profile = await liff.getProfile();
        const lineId = profile.userId;

        // ‡πÄ‡∏Å‡πá‡∏ö‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
        localStorage.setItem('userId', lineId);
        localStorage.setItem('displayName', profile.displayName);
        localStorage.setItem('pictureUrl', profile.pictureUrl);

        // üîê ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
        const loginRes = await loginWithLineId(lineId);

        if (loginRes && loginRes.jwt) {
          localStorage.setItem('jwt', loginRes.jwt);
          console.log("‚úÖ Login success, redirecting to /home");
          navigate('/home');
        } else {
          console.log("‚ö†Ô∏è User not found, redirecting to /register");
          navigate('/register');
        }

      } catch (error) {
        console.error("üö® LINE Auth Error:", error);
        setErrorMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà');
      } finally {
        setLoading(false);
      }
    };

    handleAuth();
  }, [navigate]);

  if (loading) return <LoadingSpinner />;
  if (errorMessage) return <div className="text-red-500 text-center mt-10">{errorMessage}</div>;

  return <div className="App"></div>;
};

export default App;
